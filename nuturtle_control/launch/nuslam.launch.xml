<launch>
    <arg name="cmd_src" default="circle"
        description="Choices for control input: ['circle', 'teleop', 'none']; defaults to circle." />
    <arg name="robot" default="nusim" 
        description="Choices for the robot: ['nusim', 'localhost', 'none']; defaults to nusim (simulator)." />
    <arg name="use_rviz" default="true"
        description="Choices to use rviz: ['true', 'false']; (declared in start_robot, used in load_one launch)" />
    
    <node pkg="nuturtle_control" exec="turtle_control"
        args="--ros-args --params-file $(find-pkg-share nuturtle_description)/config/diff_params.yaml"
        if="$(eval '\'$(var robot)\' != \'localhost\'')" >
        <remap from="/wheel_cmd" to="red/wheel_cmd" />
        <remap from="/joint_states" to="blue/joint_states" />
        <remap from="/sensor_data" to="red/sensor_data" />
    </node>

    <group if="$(eval '\'$(var robot)\' == \'localhost\'')" >
        <node pkg="nuturtle_control" exec="turtle_control"
            args="--ros-args --params-file $(find-pkg-share nuturtle_description)/config/diff_params.yaml">
            <remap from="/joint_states" to="blue/joint_states" />
        </node>

        <include file="$(find-pkg-share hls_lfcd_lds_driver)/launch/hlds_laser.launch.py">
            <arg name="port" value="/dev/ttyUSB0"/>
        </include>
    </group>
    
    <node pkg="nuturtle_control" exec="circle" args="--ros-args -p frequency:='100.0'"
        if="$(eval '\'$(var cmd_src)\' == \'circle\'')" />
    <node pkg="teleop_twist_keyboard" exec="teleop_twist_keyboard" name="teleop"
        output="screen" launch-prefix="xterm -e"
        if="$(eval '\'$(var cmd_src)\' == \'teleop\'')" />

    <group if="$(eval '\'$(var robot)\' == \'nusim\'')" >
        <node pkg="rviz2" exec="rviz2" name="rviz2" 
            args="-d $(find-pkg-share nuturtle_control)/config/slam_nulaunch.rviz"
            if="$(eval '\'$(var use_rviz)\' == \'true\'')" >
        </node>

        <include file="$(find-pkg-share nuturtle_description)/launch/load_one.launch.py">
            <arg name="use_rviz" value="false"/>
            <arg name="color" value="red"/>
        </include>
        
        <node pkg="nusim" exec="nusim"
            args="--ros-args --params-file $(find-pkg-share nusim)/config/basic_world.yaml --params-file $(find-pkg-share nuturtle_description)/config/diff_params.yaml">
            <remap from="/wheel_cmd" to="red/wheel_cmd"/>
            <remap from="~/sensor_data" to="red/sensor_data"/>
        </node>

        <include file="$(find-pkg-share nuturtle_description)/launch/load_one.launch.py" >
            <arg name="use_rviz" value="false"/>
            <arg name="color" value="green"/>
            <arg name="use_jsp" value="false"/>
        </include>

    </group>

    <group if="$(eval '\'$(var robot)\' == \'none\'')" >
        <node pkg="rviz2" exec="rviz2" name="rviz2" 
            args="-d $(find-pkg-share nuturtle_control)/config/nuwall.rviz"
            if="$(eval '\'$(var use_rviz)\' == \'true\'')" />

        <include file="$(find-pkg-share nuturtle_description)/launch/load_one.launch.py">
            <arg name="use_rviz" value="false"/>
            <arg name="color" value="red"/>
        </include>
        
        <node pkg="nusim" exec="nusim"
            args="--ros-args -p lidar_frame:='blue/base_scan' -r __node:=nuwall --params-file $(find-pkg-share nusim)/config/basic_world.yaml -p draw_only:=false" >
            <remap from="/wheel_cmd" to="red/wheel_cmd"/>
            <remap from="/sensor_data" to="red/sensor_data"/>
        </node>

    </group>
    
    <group>
        <include file="$(find-pkg-share nuturtle_description)/launch/load_one.launch.py" >
            <arg name="use_rviz" value="false"/>
            <arg name="color" value="blue"/>
            <arg name="use_jsp" value="false"/>
        </include>

        <node pkg="nuturtle_control" exec="odometry"
            args="--ros-args -p body_id:='blue/base_footprint' -p odom_id:='odom' -p wheel_left:='wheel_left_joint' -p wheel_right:='wheel_right_joint'" >
        </node>

        <node pkg="tf2_ros" exec="static_transform_publisher"
            args="0 0 0 0 0 0 nusim/world odom"/>
        <node pkg="tf2_ros" exec="static_transform_publisher"
            args="0 0 0 0 0 0 nusim/world map"/>
    </group>
    
    <!-- <node pkg="numsr_turtlebot" exec="numsr_turtlebot" if="$(eval '\'$(var robot)\' == \'localhost\'')" /> -->
</launch>